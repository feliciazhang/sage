{"version":3,"sources":["webpack:///./src/pages/recipes.js","webpack:///./node_modules/regenerator-runtime/runtime.js","webpack:///./node_modules/@babel/runtime/regenerator/index.js"],"names":["EMPTY_RECIPE","title","description","cookTime","hours","min","servings","ingredients","steps","tags","RecipesPage","dispatch","useDispatch","savedRecipes","useSelector","state","recipes","useState","setRecipes","useEffect","selectedRecipe","setSelectedRecipe","showCloseWarning","setShowClosedWarning","showDeleteWarning","setShowDeleteWarning","newRecipe","setNewRecipe","add","recipe","a","addRecipe","onCloseClicked","hasChanges","className","placeholder","onChange","value","filtered","filter","toLowerCase","includes","onClick","map","idx","key","onDeleteClick","e","stopPropagation","onClickDelete","index","isNew","onClose","onAdd","size","warning","isOpen","type","deleteRecipe","runtime","exports","undefined","Op","Object","prototype","hasOwn","hasOwnProperty","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","_invoke","GenStateSuspendedStart","method","arg","GenStateExecuting","Error","GenStateCompleted","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","done","GenStateSuspendedYield","makeInvokeMethod","fn","obj","call","err","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","AsyncIterator","previousPromise","callInvokeWithMethodAndArg","Promise","resolve","reject","invoke","result","__await","then","unwrapped","error","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","constructor","displayName","isGeneratorFunction","genFun","ctor","name","mark","setPrototypeOf","__proto__","awrap","async","iter","toString","keys","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","module","regeneratorRuntime","accidentalStrictMode","Function"],"mappings":"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","file":"component---src-pages-recipes-js-6a5b454ec8acfdd0eea4.js","sourcesContent":["import React, { useState, useEffect } from \"react\"\r\nimport { useSelector, useDispatch } from 'react-redux'\r\n\r\nimport Layout from \"../components/layout\"\r\nimport { RecipeCard, Input, Button, RecipeDetails, Modal } from '../components'\r\nimport { addRecipe, deleteRecipe } from '../state/recipes'\r\n\r\nimport '../styles/recipeStyle.css'\r\n\r\nconst EMPTY_RECIPE = {\r\n  title: \"\",\r\n  description: \"\" ,\r\n  cookTime: { hours: 0, min: 0 },\r\n  servings: 0,\r\n  ingredients: [],\r\n  steps: [],\r\n  tags: []\r\n}\r\n\r\nconst RecipesPage = () => {\r\n  const dispatch = useDispatch()\r\n  const savedRecipes = useSelector(state => state.recipes)\r\n  const [recipes, setRecipes] = useState(savedRecipes)\r\n  useEffect(() => {\r\n    setRecipes(savedRecipes)\r\n  }, [savedRecipes])\r\n  const [selectedRecipe, setSelectedRecipe] = useState(null)\r\n  const [showCloseWarning, setShowClosedWarning] = useState(false)\r\n  const [showDeleteWarning, setShowDeleteWarning] = useState(null)\r\n  const [newRecipe, setNewRecipe] = useState(false)\r\n\r\n  const filterRecipes = (value) => {\r\n    const filtered = savedRecipes.filter(recipe => recipe.title.toLowerCase().includes(value.toLowerCase()))\r\n    setRecipes(filtered)\r\n  }\r\n\r\n  const add = async (recipe) => {\r\n    await dispatch(addRecipe(recipe))\r\n    setNewRecipe(false)\r\n  }\r\n\r\n  const onCloseClicked = (hasChanges) => {\r\n    if (hasChanges) {\r\n      setShowClosedWarning(true)\r\n    } else {\r\n      setShowClosedWarning(false)\r\n      setSelectedRecipe(null)\r\n      setNewRecipe(false)\r\n    }\r\n  }\r\n\r\n  const onDelete = () => {\r\n    dispatch(deleteRecipe(showDeleteWarning))\r\n    setShowDeleteWarning(null)\r\n  }\r\n\r\n  const onClickDelete = (idx, e) => {\r\n    setShowDeleteWarning(idx)\r\n    e.stopPropagation()\r\n  }\r\n\r\n  return (\r\n    <Layout>\r\n      <div className=\"sage-recipes-page\">\r\n        <div className=\"sage-recipes--toolbar\">\r\n          <Input placeholder=\"Search recipes by title or by tag\" onChange={filterRecipes} />\r\n          <Button className=\"sage-recipes--add\" onClick={() => setNewRecipe(true)}>Add recipe</Button>\r\n        </div>\r\n        <div className=\"sage-recipes\">\r\n          {recipes.map((recipe, idx) =>\r\n            <RecipeCard key={idx} recipe={recipe}\r\n              onClick={() => setSelectedRecipe(idx)}\r\n              onDeleteClick={(e) => onClickDelete(idx, e)} />)\r\n          }\r\n        </div>\r\n        \r\n        {(selectedRecipe !== null || newRecipe) &&\r\n          <RecipeDetails\r\n            recipe={newRecipe ? EMPTY_RECIPE : recipes[selectedRecipe]}\r\n            index={selectedRecipe}\r\n            isNew={newRecipe}\r\n            onClose={(hasChanges) => onCloseClicked(hasChanges)}\r\n            onAdd={(recipe) => add(recipe)}\r\n          />\r\n        }\r\n\r\n        <Modal\r\n          size=\"small\"\r\n          warning={true}\r\n          isOpen={showCloseWarning}\r\n          onClose={() => setShowClosedWarning(false)}\r\n          title=\"Are you sure?\">\r\n          Your changes will be lost. Are you sure you want to exit?\r\n          <div className=\"sage-recipes--warning-modal\">\r\n            <Button className=\"sage-recipes--modal-button\"\r\n              onClick={() => onCloseClicked(false)}>Exit without saving</Button>\r\n            <Button type=\"secondary\" onClick={() => {setShowClosedWarning(false); setNewRecipe(false)}}>\r\n              Cancel\r\n            </Button>\r\n          </div>\r\n        </Modal>\r\n\r\n        <Modal\r\n          size=\"small\"\r\n          warning={true}\r\n          isOpen={showDeleteWarning !== null}\r\n          onClose={() => setShowDeleteWarning(null)}\r\n          title=\"Are you sure?\">\r\n          Your recipe will be permanently deleted. Are you sure you want to delete it?\r\n          <div className=\"sage-recipes--warning-modal\">\r\n            <Button className=\"sage-recipes--modal-button\"\r\n              onClick={() => onDelete()}>Delete recipe</Button>\r\n            <Button type=\"secondary\" onClick={() => setShowDeleteWarning(null)}>Cancel</Button>\r\n          </div>\r\n        </Modal>\r\n      </div>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default RecipesPage\r\n","require(\"core-js/modules/web.dom.iterable\");\n\nrequire(\"core-js/modules/es6.array.iterator\");\n\nrequire(\"core-js/modules/es6.regexp.to-string\");\n\nrequire(\"core-js/modules/es6.date.to-string\");\n\nrequire(\"core-js/modules/es6.promise\");\n\nrequire(\"core-js/modules/es6.object.to-string\");\n\nrequire(\"core-js/modules/es6.object.set-prototype-of\");\n\nrequire(\"core-js/modules/es6.function.name\");\n\nrequire(\"core-js/modules/es6.array.for-each\");\n\nrequire(\"core-js/modules/es6.object.create\");\n\nrequire(\"core-js/modules/es7.symbol.async-iterator\");\n\nrequire(\"core-js/modules/es6.symbol\");\n\n/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nvar runtime = function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []); // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n    return generator;\n  }\n\n  exports.wrap = wrap; // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n\n  function tryCatch(fn, obj, arg) {\n    try {\n      return {\n        type: \"normal\",\n        arg: fn.call(obj, arg)\n      };\n    } catch (err) {\n      return {\n        type: \"throw\",\n        arg: err\n      };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\"; // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n\n  var ContinueSentinel = {}; // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n\n  function Generator() {}\n\n  function GeneratorFunction() {}\n\n  function GeneratorFunctionPrototype() {} // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n\n\n  var IteratorPrototype = {};\n\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n\n  if (NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunctionPrototype[toStringTagSymbol] = GeneratorFunction.displayName = \"GeneratorFunction\"; // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function (method) {\n      prototype[method] = function (arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  exports.isGeneratorFunction = function (genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor ? ctor === GeneratorFunction || // For the native GeneratorFunction constructor, the best we can\n    // do is to check its .name property.\n    (ctor.displayName || ctor.name) === \"GeneratorFunction\" : false;\n  };\n\n  exports.mark = function (genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n\n      if (!(toStringTagSymbol in genFun)) {\n        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n      }\n    }\n\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  }; // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n\n\n  exports.awrap = function (arg) {\n    return {\n      __await: arg\n    };\n  };\n\n  function AsyncIterator(generator) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n\n        if (value && typeof value === \"object\" && hasOwn.call(value, \"__await\")) {\n          return Promise.resolve(value.__await).then(function (value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function (err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return Promise.resolve(value).then(function (unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function (error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new Promise(function (resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise = // If enqueue has been called before, then we want to wait until\n      // all previous Promises have been resolved before calling invoke,\n      // so that results are always delivered in the correct order. If\n      // enqueue has not been called before, then it is important to\n      // call invoke immediately, without waiting on a callback to fire,\n      // so that the async generator function has the opportunity to do\n      // any necessary setup in a predictable way. This predictability\n      // is why the Promise constructor synchronously invokes its\n      // executor callback, and why async functions synchronously\n      // execute code before the first await. Since we implement simple\n      // async functions in terms of async generators, it is especially\n      // important to get this right, even though it requires care.\n      previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, // Avoid propagating failures to Promises returned by later\n      // invocations of the iterator.\n      callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();\n    } // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n\n\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n\n  exports.AsyncIterator = AsyncIterator; // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n\n  exports.async = function (innerFn, outerFn, self, tryLocsList) {\n    var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList));\n    return exports.isGeneratorFunction(outerFn) ? iter // If outerFn is a generator, return the full iterator.\n    : iter.next().then(function (result) {\n      return result.done ? result.value : iter.next();\n    });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        } // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n\n\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n        var record = tryCatch(innerFn, self, context);\n\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done ? GenStateCompleted : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted; // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  } // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n\n\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (!info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value; // Resume execution at the desired location (see delegateYield).\n\n      context.next = delegate.nextLoc; // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    } // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n\n\n    context.delegate = null;\n    return ContinueSentinel;\n  } // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n\n\n  defineIteratorMethods(Gp);\n  Gp[toStringTagSymbol] = \"Generator\"; // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n\n  Gp[iteratorSymbol] = function () {\n    return this;\n  };\n\n  Gp.toString = function () {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = {\n      tryLoc: locs[0]\n    };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{\n      tryLoc: \"root\"\n    }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function (object) {\n    var keys = [];\n\n    for (var key in object) {\n      keys.push(key);\n    }\n\n    keys.reverse(); // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      } // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n\n\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1,\n            next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n          return next;\n        };\n\n        return next.next = next;\n      }\n    } // Return an iterator with no values.\n\n\n    return {\n      next: doneResult\n    };\n  }\n\n  exports.values = values;\n\n  function doneResult() {\n    return {\n      value: undefined,\n      done: true\n    };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n    reset: function reset(skipTempReset) {\n      this.prev = 0;\n      this.next = 0; // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n      this.method = \"next\";\n      this.arg = undefined;\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" && hasOwn.call(this, name) && !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n    stop: function stop() {\n      this.done = true;\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n    dispatchException: function dispatchException(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !!caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n    abrupt: function abrupt(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n\n        if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry && (type === \"break\" || type === \"continue\") && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n    complete: function complete(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" || record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n    finish: function finish(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n    \"catch\": function _catch(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n\n          return thrown;\n        }\n      } // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n\n\n      throw new Error(\"illegal catch attempt\");\n    },\n    delegateYield: function delegateYield(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  }; // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n\n  return exports;\n}( // If this script is executing as a CommonJS module, use module.exports\n// as the regeneratorRuntime namespace. Otherwise create a new empty\n// object. Either way, the resulting object will be used to initialize\n// the regeneratorRuntime variable at the top of this file.\ntypeof module === \"object\" ? module.exports : {});\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}","module.exports = require(\"regenerator-runtime\");\n"],"sourceRoot":""}
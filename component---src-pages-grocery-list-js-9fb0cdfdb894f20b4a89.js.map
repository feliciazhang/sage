{"version":3,"sources":["webpack:///./src/pages/grocery-list.js"],"names":["GroceryItem","listItem","onChange","handleDelete","quantity","unit","item","id","onFieldChanged","param","value","className","key","type","size","options","UNITS_DROPDOWN","selected","isSearchable","placeholder","onClick","GroceryListPage","groceries","useSelector","state","grocery","useState","listWithId","setGrocery","dispatch","useDispatch","map","index","idx","clone","splice","newList","withoutId","updateItem","remove","newItem","update","moreGroceries","push","add","UNITS","NA"],"mappings":"knBAWA,IAAMA,EAAc,SAAC,GAA0C,IAAxCC,EAAuC,EAAvCA,SAAUC,EAA6B,EAA7BA,SAAUC,EAAmB,EAAnBA,aAClCC,EAA4BH,EAA5BG,SAAUC,EAAkBJ,EAAlBI,KAAMC,EAAYL,EAAZK,KAAMC,EAAMN,EAANM,GACvBC,EAAiB,SAACC,EAAOC,GAAW,IAAD,EACvCR,EAAS,OAAD,UAAKD,IAAL,MAAgBQ,GAAQC,EAAxB,MAGV,OACE,yBAAKC,UAAU,yBAAyBC,IAAKL,GAC3C,kBAAC,IAAD,CAAOM,KAAK,SAASC,KAAK,QAAQH,UAAU,0BAC1CD,MAAON,EAAUF,SAAU,SAACQ,GAAD,OAAWF,EAAe,WAAYE,MACnE,kBAAC,IAAD,CAAUC,UAAU,sBAAsBI,QAASC,IAAgBC,SAAUZ,EAC3EH,SAAU,SAACQ,GAAD,OAAWF,EAAe,OAAQE,IAAQQ,cAAc,EAAMC,YAAY,SACtF,kBAAC,IAAD,CAAOL,KAAK,QAAQH,UAAU,iBAAiBD,MAAOJ,EACpDJ,SAAU,SAACQ,GAAD,OAAWF,EAAe,OAAQE,MAC9C,kBAAC,IAAD,CAAQU,QAASjB,MAkDRkB,UA7CS,WACtB,IAAMC,EAAYC,aAAY,SAAAC,GAAK,OAAIA,EAAMC,WADjB,EAEEC,mBAASC,YAAWL,IAA3CG,EAFqB,KAEZG,EAFY,KAGtBC,EAAWC,cA0BjB,OACE,kBAAC,IAAD,KACE,yBAAKnB,UAAU,qBACb,yBAAKA,UAAU,8BAAf,gBACCc,EAAQM,KAAI,SAACzB,EAAM0B,GAAP,OACX,kBAAChC,EAAD,CAAaY,IAAKN,EAAKC,GAAIN,SAAUK,EAAMH,aAAc,kBAblD,SAAC8B,GACd,IAAMC,EAAQT,EAAQU,OAAO,GAC7BP,EAAWM,GACXA,EAAMC,OAAOF,EAAK,GAClB,IAAMG,EAAUC,YAAUH,GAC1BL,EAASS,YAAWF,IAQiDG,CAAOP,IACpE9B,SAAU,SAACsC,GAAD,OAtBL,SAACP,EAAK3B,GACnB,IAAI4B,EAAQT,EAAQU,OAAO,GAC3BD,EAAMD,GAAO3B,EACbsB,EAAWM,GACX,IAAME,EAAUC,YAAUH,GAC1BL,EAASS,YAAWF,IAiBWK,CAAOT,EAAOQ,SAEzC,kBAAC,IAAD,CAAQ7B,UAAU,yBAAyBE,KAAK,YAAYO,QAAS,kBAhC/D,SAACd,GACX,IAAMoC,EAAa,EAAOjB,GAC1BiB,EAAcC,KAAKrC,GACnBsB,EAAWc,GACX,IAAMN,EAAUC,YAAUK,GAC1Bb,EAASS,YAAWF,IA2B2DQ,CAAI,CAACxC,SAAU,EAAGC,KAAMwC,IAAMC,GAAIxC,KAAM,WAAnH","file":"component---src-pages-grocery-list-js-9fb0cdfdb894f20b4a89.js","sourcesContent":["import React, { useState } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\n\r\nimport { updateItem } from \"../state/grocery\"\r\nimport { UNITS, UNITS_DROPDOWN } from '../constants'\r\nimport { listWithId, withoutId } from '../constants/utils'\r\nimport Layout from \"../components/layout\"\r\nimport { Button, Input, Dropdown, Delete } from \"../components\"\r\n\r\nimport \"../styles/grocery-list.css\"\r\n\r\nconst GroceryItem = ({ listItem, onChange, handleDelete }) => {\r\n  const {quantity, unit, item, id} = listItem\r\n  const onFieldChanged = (param, value) => {\r\n    onChange({...listItem, [param]: value})\r\n  }\r\n\r\n  return (\r\n    <div className=\"sage-grocery-list-item\" key={id}> \r\n      <Input type=\"number\" size=\"small\" className=\"sage-item-line-quantity\"\r\n        value={quantity} onChange={(value) => onFieldChanged(\"quantity\", value)} />\r\n      <Dropdown className=\"sage-item-line-unit\" options={UNITS_DROPDOWN} selected={unit}\r\n        onChange={(value) => onFieldChanged(\"unit\", value)} isSearchable={true} placeholder=\"unit\" />\r\n      <Input size=\"small\" className=\"sage-item-line\" value={item}\r\n        onChange={(value) => onFieldChanged(\"item\", value)} />\r\n      <Delete onClick={handleDelete} />\r\n    </div>\r\n  )\r\n}\r\n\r\nconst GroceryListPage = () => {\r\n  const groceries = useSelector(state => state.grocery)\r\n  const [grocery, setGrocery] = useState(listWithId(groceries))\r\n  const dispatch = useDispatch()\r\n\r\n  const add = (item) => {\r\n    const moreGroceries = [...grocery]\r\n    moreGroceries.push(item)\r\n    setGrocery(moreGroceries)\r\n    const newList = withoutId(moreGroceries)\r\n    dispatch(updateItem(newList))\r\n  }\r\n\r\n  const update = (idx, item) => {\r\n    let clone = grocery.splice(0)\r\n    clone[idx] = item\r\n    setGrocery(clone)\r\n    const newList = withoutId(clone)\r\n    dispatch(updateItem(newList))    \r\n  }\r\n\r\n  const remove = (idx) => {\r\n    const clone = grocery.splice(0)\r\n    setGrocery(clone)\r\n    clone.splice(idx, 1)\r\n    const newList = withoutId(clone)\r\n    dispatch(updateItem(newList))\r\n  }\r\n  \r\n  return (\r\n    <Layout>\r\n      <div className=\"sage-grocery-list\">\r\n        <div className=\"sage-grocery-list--heading\">Grocery list</div>\r\n        {grocery.map((item, index) =>\r\n          <GroceryItem key={item.id} listItem={item} handleDelete={() => remove(index)}\r\n            onChange={(newItem) => update(index, newItem)}/>\r\n        )}\r\n        <Button className=\"sage-grocery-list--add\" type='secondary' onClick={() => add({quantity: 0, unit: UNITS.NA, item: \"item\"})}>\r\n          + Add item\r\n        </Button>\r\n      </div>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default GroceryListPage\r\n"],"sourceRoot":""}
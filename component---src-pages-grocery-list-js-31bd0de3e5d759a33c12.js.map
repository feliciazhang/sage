{"version":3,"sources":["webpack:///./src/pages/grocery-list.js"],"names":["GroceryItem","listItem","onChange","handleDelete","quantity","unit","item","id","onFieldChanged","param","value","className","key","type","size","options","UNITS_DROPDOWN","selected","isSearchable","placeholder","onClick","GroceryListPage","groceries","useSelector","state","grocery","useState","listWithId","setGrocery","dispatch","useDispatch","modalStep","setModalStep","email","setEmail","showError","setShowError","map","index","idx","clone","splice","newList","withoutId","updateItem","remove","newItem","update","moreGroceries","push","add","UNITS","NA","title","onClose","isOpen","label","includes"],"mappings":"soBAWA,IAAMA,EAAc,SAAC,GAA0C,IAAxCC,EAAuC,EAAvCA,SAAUC,EAA6B,EAA7BA,SAAUC,EAAmB,EAAnBA,aAClCC,EAA4BH,EAA5BG,SAAUC,EAAkBJ,EAAlBI,KAAMC,EAAYL,EAAZK,KAAMC,EAAMN,EAANM,GACvBC,EAAiB,SAACC,EAAOC,GAAW,IAAD,EACvCR,EAAS,OAAD,UAAKD,IAAL,MAAgBQ,GAAQC,EAAxB,MAGV,OACE,yBAAKC,UAAU,yBAAyBC,IAAKL,GAC3C,kBAAC,IAAD,CAAOM,KAAK,SAASC,KAAK,QAAQH,UAAU,0BAC1CD,MAAON,EAAUF,SAAU,SAACQ,GAAD,OAAWF,EAAe,WAAYE,MACnE,kBAAC,IAAD,CAAUC,UAAU,sBAAsBI,QAASC,IAAgBC,SAAUZ,EAC3EH,SAAU,SAACQ,GAAD,OAAWF,EAAe,OAAQE,IAAQQ,cAAc,EAAMC,YAAY,SACtF,kBAAC,IAAD,CAAOL,KAAK,QAAQH,UAAU,iBAAiBD,MAAOJ,EACpDJ,SAAU,SAACQ,GAAD,OAAWF,EAAe,OAAQE,MAC9C,kBAAC,IAAD,CAAQU,QAASjB,MAkFRkB,UA7ES,WACtB,IAAMC,EAAYC,aAAY,SAAAC,GAAK,OAAIA,EAAMC,WADjB,EAEEC,mBAASC,YAAWL,IAA3CG,EAFqB,KAEZG,EAFY,KAGtBC,EAAWC,cAHW,EAIMJ,mBAAS,GAApCK,EAJqB,KAIVC,EAJU,OAKFN,mBAAS,IAA5BO,EALqB,KAKdC,EALc,OAMMR,oBAAS,GAApCS,EANqB,KAMVC,EANU,KA6C5B,OACE,kBAAC,IAAD,KACE,yBAAKzB,UAAU,qBACb,yBAAKA,UAAU,8BAAf,gBACCc,EAAQY,KAAI,SAAC/B,EAAMgC,GAAP,OACX,kBAACtC,EAAD,CAAaY,IAAKN,EAAKC,GAAIN,SAAUK,EAAMH,aAAc,kBA1BlD,SAACoC,GACd,IAAMC,EAAQf,EAAQgB,OAAO,GAC7Bb,EAAWY,GACXA,EAAMC,OAAOF,EAAK,GAClB,IAAMG,EAAUC,YAAUH,GAC1BX,EAASe,YAAWF,IAqBiDG,CAAOP,IACpEpC,SAAU,SAAC4C,GAAD,OAnCL,SAACP,EAAKjC,GACnB,IAAIkC,EAAQf,EAAQgB,OAAO,GAC3BD,EAAMD,GAAOjC,EACbsB,EAAWY,GACX,IAAME,EAAUC,YAAUH,GAC1BX,EAASe,YAAWF,IA8BWK,CAAOT,EAAOQ,SAEzC,kBAAC,IAAD,CAAQnC,UAAU,yBAAyBE,KAAK,YAAYO,QAAS,kBA7C/D,SAACd,GACX,IAAM0C,EAAa,EAAOvB,GAC1BuB,EAAcC,KAAK3C,GACnBsB,EAAWoB,GACX,IAAMN,EAAUC,YAAUK,GAC1BnB,EAASe,YAAWF,IAwC2DQ,CAAI,CAAC9C,SAAU,EAAGC,KAAM8C,IAAMC,GAAI9C,KAAM,WAAnH,eAIF,kBAAC,IAAD,CAAQK,UAAU,kBAAkBS,QAAS,kBAAMY,EAAa,KAAhE,qBACA,kBAAC,IAAD,CACEqB,MAAM,yBACNC,QAAS,kBAAMtB,EAAa,IAC5BlB,KAAK,QACLyC,OAAQxB,EAAY,GACL,IAAdA,EACC,6BACE,kBAAC,IAAD,CAAOjB,KAAK,QAAQH,UAAU,uBAAuB6C,MAAM,QAAQtD,SAjCnD,SAACQ,GACzBwB,EAASxB,GACT0B,GAAa,MAgCJD,GAAa,uBAAGxB,UAAU,oBAAb,8BACd,kBAAC,IAAD,CAAQA,UAAU,yBAAyBS,QA9B7B,WAClBa,EAAMwB,SAAS,KACjBzB,EAAa,GAEbI,GAAa,KA0BP,SAGF,uBAAGzB,UAAU,mBAAb","file":"component---src-pages-grocery-list-js-31bd0de3e5d759a33c12.js","sourcesContent":["import React, { useState } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\n\r\nimport { updateItem } from \"../state/grocery\"\r\nimport { UNITS, UNITS_DROPDOWN } from '../constants'\r\nimport { listWithId, withoutId } from '../constants/utils'\r\nimport Layout from \"../components/layout\"\r\nimport { Button, Input, Dropdown, Delete, Modal } from \"../components\"\r\n\r\nimport \"../styles/grocery-list.css\"\r\n\r\nconst GroceryItem = ({ listItem, onChange, handleDelete }) => {\r\n  const {quantity, unit, item, id} = listItem\r\n  const onFieldChanged = (param, value) => {\r\n    onChange({...listItem, [param]: value})\r\n  }\r\n\r\n  return (\r\n    <div className=\"sage-grocery-list-item\" key={id}> \r\n      <Input type=\"number\" size=\"small\" className=\"sage-item-line-quantity\"\r\n        value={quantity} onChange={(value) => onFieldChanged(\"quantity\", value)} />\r\n      <Dropdown className=\"sage-item-line-unit\" options={UNITS_DROPDOWN} selected={unit}\r\n        onChange={(value) => onFieldChanged(\"unit\", value)} isSearchable={true} placeholder=\"unit\" />\r\n      <Input size=\"small\" className=\"sage-item-line\" value={item}\r\n        onChange={(value) => onFieldChanged(\"item\", value)} />\r\n      <Delete onClick={handleDelete} />\r\n    </div>\r\n  )\r\n}\r\n\r\nconst GroceryListPage = () => {\r\n  const groceries = useSelector(state => state.grocery)\r\n  const [grocery, setGrocery] = useState(listWithId(groceries))\r\n  const dispatch = useDispatch()\r\n  const [modalStep, setModalStep] = useState(0) // 0 is closed\r\n  const [email, setEmail] = useState('')\r\n  const [showError, setShowError] = useState(false)\r\n\r\n  const add = (item) => {\r\n    const moreGroceries = [...grocery]\r\n    moreGroceries.push(item)\r\n    setGrocery(moreGroceries)\r\n    const newList = withoutId(moreGroceries)\r\n    dispatch(updateItem(newList))\r\n  }\r\n\r\n  const update = (idx, item) => {\r\n    let clone = grocery.splice(0)\r\n    clone[idx] = item\r\n    setGrocery(clone)\r\n    const newList = withoutId(clone)\r\n    dispatch(updateItem(newList))    \r\n  }\r\n\r\n  const remove = (idx) => {\r\n    const clone = grocery.splice(0)\r\n    setGrocery(clone)\r\n    clone.splice(idx, 1)\r\n    const newList = withoutId(clone)\r\n    dispatch(updateItem(newList))\r\n  }\r\n\r\n  const handleEmailChange = (value) => {\r\n    setEmail(value)\r\n    setShowError(false)\r\n  }\r\n  \r\n  const handleClickSend = () => {\r\n    if (email.includes(\"@\")) {\r\n      setModalStep(2)\r\n    } else {\r\n      setShowError(true)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Layout>\r\n      <div className=\"sage-grocery-list\">\r\n        <div className=\"sage-grocery-list--heading\">Grocery list</div>\r\n        {grocery.map((item, index) =>\r\n          <GroceryItem key={item.id} listItem={item} handleDelete={() => remove(index)}\r\n            onChange={(newItem) => update(index, newItem)}/>\r\n        )}\r\n        <Button className=\"sage-grocery-list--add\" type='secondary' onClick={() => add({quantity: 0, unit: UNITS.NA, item: \"item\"})}>\r\n          + Add item\r\n        </Button>\r\n      </div>\r\n      <Button className=\"sage-list--send\" onClick={() => setModalStep(1)}>Send grocery list</Button>\r\n      <Modal\r\n        title=\"Send your grocery list\"\r\n        onClose={() => setModalStep(0)}\r\n        size=\"small\"\r\n        isOpen={modalStep > 0}>\r\n        {modalStep === 1 ? (\r\n          <div>\r\n            <Input size=\"small\" className=\"sage-list-send-input\" label=\"Email\" onChange={handleEmailChange} />\r\n            {showError && <p className=\"sage-list--error\">Please enter a valid email</p>}\r\n            <Button className=\"sage-list--send-button\" onClick={handleClickSend}>Send</Button>\r\n          </div>\r\n        ): (\r\n          <p className=\"sage-list--sent\">Your grocery list has been sent! Please check your inbox.</p>\r\n        )}\r\n      </Modal>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default GroceryListPage\r\n"],"sourceRoot":""}
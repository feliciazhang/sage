{"version":3,"sources":["webpack:///./src/pages/grocery-list.js"],"names":["GroceryItem","listItem","onChange","handleDelete","quantity","unit","item","onFieldChanged","param","value","className","type","size","options","UNITS_DROPDOWN","selected","isSearchable","placeholder","onClick","GroceryListPage","groceries","useSelector","state","grocery","useState","setGrocery","dispatch","useDispatch","map","index","idx","clone","splice","updateItem","newItem","update","UNITS","NA","moreGroceries","push"],"mappings":"smBAUA,IAAMA,EAAc,SAAC,GAA0C,IAAxCC,EAAuC,EAAvCA,SAAUC,EAA6B,EAA7BA,SAAUC,EAAmB,EAAnBA,aAClCC,EAAwBH,EAAxBG,SAAUC,EAAcJ,EAAdI,KAAMC,EAAQL,EAARK,KACjBC,EAAiB,SAACC,EAAOC,GAAW,IAAD,EACvCP,EAAS,OAAD,UAAKD,IAAL,MAAgBO,GAAQC,EAAxB,MAGV,OACE,yBAAKC,UAAU,0BACb,kBAAC,IAAD,CAAOC,KAAK,SAASC,KAAK,QAAQF,UAAU,0BAC1CD,MAAOL,EAAUF,SAAU,SAACO,GAAD,OAAWF,EAAe,WAAYE,MACnE,kBAAC,IAAD,CAAUC,UAAU,sBAAsBG,QAASC,IAAgBC,SAAUV,EAC3EH,SAAU,SAACO,GAAD,OAAWF,EAAe,OAAQE,IAAQO,cAAc,EAAMC,YAAY,SACtF,kBAAC,IAAD,CAAOL,KAAK,QAAQF,UAAU,iBAAiBD,MAAOH,EACpDJ,SAAU,SAACO,GAAD,OAAWF,EAAe,OAAQE,MAC9C,kBAAC,IAAD,CAAQS,QAASf,MA8CRgB,UAzCS,WACtB,IAAMC,EAAYC,aAAY,SAAAC,GAAK,OAAIA,EAAMC,WADjB,EAEEC,mBAASJ,GAAhCG,EAFqB,KAEZE,EAFY,KAGtBC,EAAWC,cAuBjB,OACE,kBAAC,IAAD,KACE,yBAAKjB,UAAU,qBAAf,eAEGa,EAAQK,KAAI,SAACtB,EAAMuB,GAAP,OACX,kBAAC7B,EAAD,CAAaC,SAAUK,EAAMH,aAAc,kBAZnC2B,EAYgDD,GAXxDE,EAAQR,EAAQS,OAAO,IACvBA,OAAOF,EAAK,GAClBL,EAAWM,QACXL,EAASO,YAAWF,IAJP,IAACD,EACRC,GAWgE7B,SAAU,SAACgC,GAAD,OAnBnE,SAACJ,EAAKxB,GACnB,IAAIyB,EAAQR,EAAQS,OAAO,GAC3BD,EAAMD,GAAOxB,EACbmB,EAAWM,GACXL,EAASO,YAAWF,IAeyEI,CAAON,EAAOK,SAEvG,kBAAC,IAAD,CAAQvB,KAAK,YAAYO,QAAS,kBA5B3BZ,EA4BqC,CAACF,SAAU,EAAGC,KAAM+B,IAAMC,GAAI/B,KAAM,SA3B9EgC,EAAa,EAAOf,IACZgB,KAAKjC,GACnBmB,EAAWa,QACXZ,EAASO,YAAWK,IAJV,IAAChC,EACLgC,IA2BF","file":"component---src-pages-grocery-list-js-b310cf870eb76c7e705f.js","sourcesContent":["import React, { useState } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\n\r\nimport { updateItem } from \"../state/grocery\"\r\nimport { UNITS, UNITS_DROPDOWN } from '../constants'\r\nimport Layout from \"../components/layout\"\r\nimport { Button, Input, Dropdown, Delete } from \"../components\"\r\n\r\nimport \"../styles/grocery-list.css\"\r\n\r\nconst GroceryItem = ({ listItem, onChange, handleDelete }) => {\r\n  const {quantity, unit, item} = listItem\r\n  const onFieldChanged = (param, value) => {\r\n    onChange({...listItem, [param]: value})\r\n  }\r\n\r\n  return (\r\n    <div className=\"sage-grocery-list-item\"> \r\n      <Input type=\"number\" size=\"small\" className=\"sage-item-line-quantity\"\r\n        value={quantity} onChange={(value) => onFieldChanged(\"quantity\", value)} />\r\n      <Dropdown className=\"sage-item-line-unit\" options={UNITS_DROPDOWN} selected={unit}\r\n        onChange={(value) => onFieldChanged(\"unit\", value)} isSearchable={true} placeholder=\"unit\" />\r\n      <Input size=\"small\" className=\"sage-item-line\" value={item}\r\n        onChange={(value) => onFieldChanged(\"item\", value)} />\r\n      <Delete onClick={handleDelete} />\r\n    </div>\r\n  )\r\n}\r\n\r\nconst GroceryListPage = () => {\r\n  const groceries = useSelector(state => state.grocery)\r\n  const [grocery, setGrocery] = useState(groceries)\r\n  const dispatch = useDispatch()\r\n\r\n  const add = (item) => {\r\n    const moreGroceries = [...grocery]\r\n    moreGroceries.push(item)\r\n    setGrocery(moreGroceries)\r\n    dispatch(updateItem(moreGroceries))\r\n  }\r\n\r\n  const update = (idx, item) => {\r\n    let clone = grocery.splice(0)\r\n    clone[idx] = item\r\n    setGrocery(clone)\r\n    dispatch(updateItem(clone))    \r\n  }\r\n\r\n  const remove = (idx) => {\r\n    const clone = grocery.splice(0)\r\n    clone.splice(idx, 1)\r\n    setGrocery(clone)\r\n    dispatch(updateItem(clone))\r\n  }\r\n  \r\n  return (\r\n    <Layout>\r\n      <div className=\"sage-grocery-list\">\r\n        Grocery List\r\n        {grocery.map((item, index) =>\r\n          <GroceryItem listItem={item} handleDelete={() => remove(index)} onChange={(newItem) => update(index, newItem)}/>\r\n        )}\r\n        <Button type='secondary' onClick={() => add({quantity: 0, unit: UNITS.NA, item: \"item\"})}>\r\n          + add item\r\n        </Button>\r\n      </div>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default GroceryListPage"],"sourceRoot":""}